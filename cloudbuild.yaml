steps:
- name: 'gcr.io/cloud-builders/docker'
  id: Build docker image
  args: ['build', '--tag=${_GCR_DOCKER_IMAGE_PATH}:$SHORT_SHA', '--tag=${_GCR_DOCKER_IMAGE_PATH}:latest', '.']
  dir: ${_SERVICE_FOLDER_NAME}

- name: 'gcr.io/cloud-builders/docker'
  id: Push docker image with SHA tag
  args: ['push', '${_GCR_DOCKER_IMAGE_PATH}:$SHORT_SHA']

- name: 'gcr.io/cloud-builders/docker'
  id: Push docker image with latest tag
  args: ['push', '${_GCR_DOCKER_IMAGE_PATH}:latest']

- name: 'gcr.io/cloud-builders/gcloud'
  id: Connecting to GKE cluster
  args: ['container', 'clusters', 'get-credentials', '${_KUBERNETES_CLUSTER_NAME}', '--zone', '_KUBERNETES_CLUSTER_LOCATION', '--project', '_GCP_PROJECT_ID']

- name: 'gcr.io/cloud-builders/kubectl'
  id: Creating/Updating deployement, services
  args: ['apply','-f','k8-manifests/services.yaml']

- name: 'gcr.io/cloud-builders/kubectl'
  id: Update image of kubernetes deployment
  args: ['set', 'image', 'deployment/${_KUBERNETES_DEPLOYMENT_NAME}', '${_KUBERNETES_CONTAINER_NAME}=${_GCR_DOCKER_IMAGE_PATH}:$SHORT_SHA']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_KUBERNETES_CLUSTER_LOCATION}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_KUBERNETES_CLUSTER_NAME}'

- name: 'gcr.io/cloud-builders/kubectl'
  id: Check rollout status of kubernetes deployment
  args: ['rollout', 'status', 'deployment/${_KUBERNETES_DEPLOYMENT_NAME}']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_KUBERNETES_CLUSTER_LOCATION}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_KUBERNETES_CLUSTER_NAME}'
timeout: 900s
